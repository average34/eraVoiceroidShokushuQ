;戦闘用の雑多な関数

;攻撃威力（装備補正込み）取得
;ARG:0	キャラID
@SHOT_POWER(ARG:0)
#FUNCTION
;LOCAL
;0	LOOP
;1	RETURN

LOCAL:1 = ABL:(ARG:0):98

IF (CFLAG:(ARG:0):7 == 20) || (CFLAG:(ARG:0):8 == 20)
	LOCAL:1 += 10
ENDIF

IF (CFLAG:(ARG:0):7 == 21) || (CFLAG:(ARG:0):8 == 21)
	LOCAL:1 += 20
ENDIF

IF (CFLAG:(ARG:0):7 == 22) || (CFLAG:(ARG:0):8 == 22)
	LOCAL:1 += 40
ENDIF

IF (CFLAG:(ARG:0):7 == 23) || (CFLAG:(ARG:0):8 == 23)
	LOCAL:1 += 60
ENDIF

RETURNF LOCAL:1


;装備威力取得
;ARG:0	装備ID
;ARG:1	装備中のキャラID
@EQUIP_POWER(ARG:0, ARG:1)
#FUNCTION
;LOCAL
;0	ユニーク武器用のブースト処理
LOCAL:0 = 0
;ユニーク武器追加パッチ
;☆マーク付きの武器は装備者の淫乱系素質が攻撃力に影響する

;淫乱系素質一つにつき+10
SIF TALENT:(ARG:1):74
	LOCAL:0 += 10
SIF TALENT:(ARG:1):75
	LOCAL:0 += 10
SIF TALENT:(ARG:1):76
	LOCAL:0 += 10
SIF TALENT:(ARG:1):77
	LOCAL:0 += 10
SIF TALENT:(ARG:1):78
	LOCAL:0 += 10
SIF TALENT:(ARG:1):79
	LOCAL:0 += 10
;全部揃ったら+10　更に戦闘素質の40％追加
IF TALENT:(ARG:1):74 && TALENT:(ARG:1):75 && TALENT:(ARG:1):76 && TALENT:(ARG:1):77 && TALENT:(ARG:1):78 && TALENT:(ARG:1):79
	LOCAL:0 += 10
	LOCAL:0 += (ABL:(ARG:1):98 * 40) / 100
ENDIF

;母乳体質なら+10
SIF TALENT:(ARG:1):130 > 0
	LOCAL:0 += 10 * (TALENT:(ARG:1):130)
;母乳粘度なら+10
SIF TALENT:(ARG:1):220 > 0
	LOCAL:0 += 10 * (TALENT:(ARG:1):220)
;拡張乳腺なら+10
SIF TALENT:(ARG:1):162 > 0
	LOCAL:0 += 10 * (TALENT:(ARG:1):162)
;乳腺工事完了なら+10　更に戦闘素質の40％追加
IF TALENT:(ARG:1):130 >= 3 && TALENT:(ARG:1):162 == 4
	LOCAL:0 += 10
	LOCAL:0 += (ABL:(ARG:1):98 * 40) / 100
ENDIF

;排卵異常なら+10
SIF TALENT:(ARG:1):137 > 0
	LOCAL:0 += 10 * (TALENT:(ARG:1):130)
;苗床状態（産卵も）なら+10　更に戦闘素質の40％追加
IF (TALENT:(ARG:1):135 || TALENT:(ARG:1):136) && TALENT:(ARG:1):137 == 3
	LOCAL:0 += 10
	LOCAL:0 += (ABL:(ARG:1):98 * 40) / 100
ENDIF

;侵食度が高いと+5
SIF CFLAG:(ARG:1):80 >= 1
	LOCAL:0 += 5
SIF CFLAG:(ARG:1):80 >= 5
	LOCAL:0 += 5
SIF CFLAG:(ARG:1):80 >= 10
	LOCAL:0 += 5
SIF CFLAG:(ARG:1):80 >= 15
	LOCAL:0 += 5
SIF CFLAG:(ARG:1):80 >= 20
	LOCAL:0 += 5
;完全侵食済み+全インプラントなら+10　更に戦闘素質の40％追加
IF CFLAG:(ARG:1):80 >= 20 && GETBIT(CFLAG:(ARG:1):81,1 + 1) && GETBIT(CFLAG:(ARG:1):81,2 + 1) && GETBIT(CFLAG:(ARG:1):81,4 + 1) && GETBIT(CFLAG:(ARG:1):81,8 + 1) && GETBIT(CFLAG:(ARG:1):81,16 + 1) && GETBIT(CFLAG:(ARG:1):32,2 + 1) && GETBIT(CFLAG:(ARG:1):81,128 + 1) && GETBIT(CFLAG:(ARG:1):81,512 + 1)
	LOCAL:0 += 10
	LOCAL:0 += (ABL:(ARG:1):98 * 40) / 100
ENDIF

;触手中毒が高いと+10
SIF ABL:(ARG:1):11 > 0
	LOCAL:0 += 10 * (ABL:(ARG:1):10)
;触手中毒ＭＡＸで全身触手まみれなら+5　更に戦闘素質の25％追加
IF ABL:(ARG:1):11 == 3 && CFLAG:(ARG:1):37 > 0 && CFLAG:(ARG:1):46 > 0 && CFLAG:(ARG:1):48 > 0
	LOCAL:0 += 5
	LOCAL:0 += (ABL:(ARG:1):98 * 25) / 100
ENDIF

;体内にお客さんがいると+10
SIF CFLAG:(ARG:1):22 > 0 || CFLAG:(ARG:1):36 > 0
	LOCAL:0 += 10
SIF CFLAG:(ARG:1):151 > 0
	LOCAL:0 += 10
SIF CFLAG:(ARG:1):161 > 0
	LOCAL:0 += 10
SIF CFLAG:(ARG:1):171 > 0
	LOCAL:0 += 10
;全室満員なら+15　更に戦闘素質の50％追加(滅多にないので数値高め)
IF (CFLAG:(ARG:1):22 > 0 || CFLAG:(ARG:1):36 > 0) && CFLAG:(ARG:1):151 > 0 && CFLAG:(ARG:1):161 > 0 && CFLAG:(ARG:1):171 > 0
	LOCAL:0 += 15
	LOCAL:0 += (ABL:(ARG:1):98 * 50) / 100
ENDIF

;部屋の汚染度の50％が攻撃力に加算(即ち最大で+50)
SIF FLAG:(FLAG:5 + 50) > 0
	LOCAL:0 += (FLAG:(FLAG:5 + 50) * 50) / 100
;部屋の汚染度がＭＡＸだと命中率上昇(味方行動定義で処理)

;悪堕ち寸前ならダメ押しで攻撃力+40
SIF TALENT:(ARG:1):123 && TALENT:(ARG:1):156
	LOCAL:0 += 40

SELECTCASE ARG:0
	CASE 1
		RETURNF 35
	CASE 2
		RETURNF 50
	CASE 3
		RETURNF 65
	CASE 4
		RETURNF 80
	CASE 5
		RETURNF 100
	CASE 6
		RETURNF 140
	CASE 7
		RETURNF 200
	CASE 8
		RETURNF 10
	CASE 9
		RETURNF 100 + (10 * ABL:(ARG:1):11) + LOCAL:0
	CASE 10
		RETURNF 25
	CASE 11
		RETURNF 40
	CASE 12
		RETURNF 55
	CASE 13
		RETURNF 70
	CASE 14
		RETURNF 80
	CASE 15
		RETURNF 90
	CASE 16
		RETURNF 100
	CASE 17
		RETURNF 50 + (10 * ABL:(ARG:1):11) + LOCAL:0
	CASE 18
		RETURNF 60 + (10 * ABL:(ARG:1):11) + LOCAL:0
	CASEELSE
		RETURNF 0
ENDSELECT

;スキルごとの残弾チェック
;ARG:0	弾数
;ARG:1	スキルID
;RETURN 0:足りない　1:足りる
@CHECK_BULLET_ENOUGH(ARG:0, ARG:1)
#FUNCTION
;LOCAL
;0	LOOP
;1	必要数
;2	TEMP

LOCAL:1 = 1

SELECTCASE ARG:1
	CASE 20
		LOCAL:1 = 2
	CASE 21
		LOCAL:1 = 2
	CASE 22
		LOCAL:1 = 2
	CASE 23
		LOCAL:1 = 1
	CASE 24
		;V1.00から敵の数*2をちゃんと計算するように変更
		LOCAL:2 = 0
		FOR LOCAL:0, 1, 11
			IF TFLAG:(LOCAL:0) > 0 && DA:(TFLAG:(LOCAL:0)):1 > 0
				LOCAL:2 += 1
			ENDIF
		NEXT
		LOCAL:1 = LIMIT(LOCAL:2 * 2, 2, 6)
	CASE 25
		LOCAL:1 = 3
ENDSELECT

IF ARG:0 >= LOCAL:1
	RETURNF 1
ELSE
	RETURNF 0
ENDIF


;戦闘中の敵味方ステータス表示（境界線つき）
@SHOW_BATTLE_STATUS

;状況表示
DRAWLINE
CALL SHOW_ENEMY_STATUS
DRAWLINE
CALL SHOW_PT_STATUS
DRAWLINE


;逃走成功率計算
;ARG:0	逃走選択キャラ
@GET_ESCAPE_RATE(ARG:0)
#FUNCTION
;LOCAL
;0	LOOP
;1	RETURN
;2	雑多な処理用（フラグやカウンタ）
;3	敵のHP残量など
;4	逃走率基準値

LOCAL:1 = 0
LOCAL:4 = 0

;味方の先制攻撃時は100％
SIF TFLAG:14 == 1
	RETURNF 100


;誰かが拘束されているなら、そのキャラを犠牲にして逃げられる＝100％
LOCAL:2 = 0
SIF CFLAG:1:10 || CFLAG:1:20
	LOCAL:2 = 1
IF FLAG:10
	SIF CFLAG:(FLAG:10):10 || CFLAG:(FLAG:10):20
		LOCAL:2 = 1
ENDIF
IF FLAG:11
	SIF CFLAG:(FLAG:11):10 || CFLAG:(FLAG:11):20
		LOCAL:2 = 1
ENDIF

SIF LOCAL:2
	RETURNF 100

;敵のHP残量による基準値を出す
;敵の強さ（種類）は影響せず、単純にHP残量（割合）で決まる
;敵が複数居る場合はちょっと計算方法が変わるが、大体平均依存
LOCAL:2 = 0
LOCAL:3 = 0

FOR LOCAL:0, 1, 11
	IF TFLAG:(LOCAL:0)
		LOCAL:2 += 1
		LOCAL:3 += DA:(TFLAG:(LOCAL:0)):1 * 100 / DA:(TFLAG:(LOCAL:0)):2
	ENDIF
NEXT

;HP残量の平均値を出しておく
IF LOCAL:2
	LOCAL:3 /= LOCAL:2
ELSE
	;敵が見つからない場合はエラーだと思うけど一応
	LOCAL:3 = 0
ENDIF

IF LOCAL:3 >= 100
	;全員ぴんぴんしている場合、基準値は3％
	LOCAL:4 = 3
ELSE
	;それ以外の場合、敵の数に応じて少し残量を弄る
	;2匹なら削った量を1.5倍、3匹なら削った量を2倍として扱う
	IF LOCAL:2 == 2
		LOCAL:3 = 100 - ((100 - LOCAL:3) * 3 / 2)
	ELSEIF LOCAL:2 == 3
		LOCAL:3 = 100 - ((100 - LOCAL:3) * 2)
	ENDIF
	
	IF LOCAL:3 >= 98
		LOCAL:4 = 10
	ELSEIF LOCAL:3 >= 95
		LOCAL:4 = 15
	ELSEIF LOCAL:3 >= 90
		LOCAL:4 = 20
	ELSEIF LOCAL:3 >= 85
		LOCAL:4 = 25
	ELSEIF LOCAL:3 >= 80
		LOCAL:4 = 30
	ELSEIF LOCAL:3 >= 75
		LOCAL:4 = 35
	ELSEIF LOCAL:3 >= 70
		LOCAL:4 = 40
	ELSEIF LOCAL:3 >= 60
		LOCAL:4 = 50
	ELSEIF LOCAL:3 >= 50
		LOCAL:4 = 60
	ELSEIF LOCAL:3 >= 40
		LOCAL:4 = 80
	ELSEIF LOCAL:3 >= 30
		LOCAL:4 = 90
	ELSEIF LOCAL:3 >= 20
		LOCAL:4 = 100
	ELSEIF LOCAL:3 >= 10
		LOCAL:4 = 200
	ELSE
		LOCAL:4 = 500
	ENDIF
ENDIF

;危機回避によるボーナス
IF ABL:(ARG:0):5 == 1
	LOCAL:4 = LOCAL:4 * 11 / 10 + 1
ELSEIF ABL:(ARG:0):5 == 2
	LOCAL:4 = LOCAL:4 * 12 / 10 + 2
ELSEIF ABL:(ARG:0):5 == 3
	LOCAL:4 = LOCAL:4 * 13 / 10 + 4
ENDIF

;TPによるボーナス
IF BASE:(ARG:0):4 >= 150
	LOCAL:4 = LOCAL:4 * 9 / 10 - 3
ELSEIF BASE:(ARG:0):4 >= 100
	;変動なし
ELSEIF BASE:(ARG:0):4 >= 80
	LOCAL:4 = LOCAL:4 + 5 + (100 - BASE:(ARG:0):4) / 10
ELSEIF BASE:(ARG:0):4 >= 50
	LOCAL:4 = LOCAL:4 + 5 + (100 - BASE:(ARG:0):4) / 5
ELSE
	LOCAL:4 = LOCAL:4 + 5 + (100 - BASE:(ARG:0):4) / 3
ENDIF

;HP残量によるペナルティ
SIF BASE:(ARG:0):0 <= 0
	LOCAL:4 /= 2

IF LOCAL:4 < 1
	LOCAL:1 = 1
ELSEIF LOCAL:4 > 100
	LOCAL:1 = 100
ELSE
	LOCAL:1 = LOCAL:4
ENDIF

;眠気ペナルティ

IF ARG:0 != FLAG:15 && ARG:0 != FLAG:16 && (CFLAG:(ARG:0):7 == 37 || CFLAG:(ARG:0):8 == 37 || CFLAG:(ARG:0):9 == 37)
	IF FLAG:7 >= 11
		LOCAL:1 = LOCAL:1 * 6 / 10
	ELSEIF FLAG:7 >= 7
		LOCAL:1 = LOCAL:1 * 8 / 10
	ENDIF
ENDIF

SIF CFLAG:(ARG:0):200 > 0
	LOCAL:1 = 1

RETURNF LOCAL:1



;生存者の中からランダムで対象を選ぶ
@SELECT_LIVE_MEMBER_PT
;LOCAL
;0	LOOP
;1	乱数保存
;2	生存者カウンタ
;3～5	選択される確率
;6	RESULT

;変数初期化
FOR LOCAL:0, 1, 7
	LOCAL:(LOCAL:0) = 0
NEXT
LOCAL:2 = 0
IF CFLAG:1:29 == 0
	LOCAL:2 += 10
	LOCAL:3 = LOCAL:2
ENDIF
IF FLAG:10
	IF CFLAG:(FLAG:10):29 == 0
		LOCAL:2 += 10
		LOCAL:4 = LOCAL:2
	ENDIF
ENDIF
IF FLAG:11
	IF CFLAG:(FLAG:11):29 == 0
		LOCAL:2 += 10
		LOCAL:5 = LOCAL:2
	ENDIF
ENDIF

IF LOCAL:2 == 0
	RETURN 1
ENDIF

LOCAL:1 = RAND:(LOCAL:2)

IF LOCAL:1 < LOCAL:3
	LOCAL:6 = 1
ELSEIF LOCAL:1 < LOCAL:4
	LOCAL:6 = FLAG:10
ELSEIF LOCAL:1 < LOCAL:5
	LOCAL:6 = FLAG:11
ELSE
	;誰も選ばれない場合(エラーっぽいけど、先頭を返しておく)
	LOCAL:6 = 1
ENDIF

RETURN LOCAL:6


;生存者の中からランダムで対象を選ぶ(敵版)
@SELECT_LIVE_MEMBER_ENEMY
;LOCAL
;0	LOOP
;1	乱数保存
;2	生存者カウンタ
;3～12	選択される確率
;13	RESULT

;変数初期化
FOR LOCAL:0, 1, 14
	LOCAL:(LOCAL:0) = 0
NEXT
LOCAL:2 = 0
FOR LOCAL:0, 1, 11
	IF TFLAG:(LOCAL:0) > 0 && DA:(TFLAG:(LOCAL:0)):1 > 0
		LOCAL:2 += 10
	ENDIF
	LOCAL:(LOCAL:0 + 2) = LOCAL:2
NEXT

IF LOCAL:2 == 0
	RETURN TFLAG:1
ENDIF

LOCAL:1 = RAND:(LOCAL:2)

IF LOCAL:1 < LOCAL:3
	LOCAL:13 = 1
ELSEIF LOCAL:1 < LOCAL:4
	LOCAL:13 = 2
ELSEIF LOCAL:1 < LOCAL:5
	LOCAL:13 = 3
ELSEIF LOCAL:1 < LOCAL:6
	LOCAL:13 = 4
ELSEIF LOCAL:1 < LOCAL:7
	LOCAL:13 = 5
ELSEIF LOCAL:1 < LOCAL:8
	LOCAL:13 = 6
ELSEIF LOCAL:1 < LOCAL:9
	LOCAL:8 = 7
ELSEIF LOCAL:1 < LOCAL:10
	LOCAL:13 = 8
ELSEIF LOCAL:1 < LOCAL:11
	LOCAL:13 = 9
ELSEIF LOCAL:1 < LOCAL:12
	LOCAL:13 = 10
ELSE
	;誰も選ばれない場合(エラーっぽいけど、先頭を返しておく)
	LOCAL:13 = 1
ENDIF

RETURN TFLAG:(LOCAL:13)



;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;ダメージ処理
;ARG:0	対象キャラ
;ARG:1	ダメージの種類
;ARG:2	ダメージの量（TPの場合のみ、正の値を入れるとTP増加になる点に注意）
;ARG:3	寸止め判定(0:寸止めなし 1:通常責め寸止め 2:自慰寸止め)
;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
@DAMAGE_COMMON(ARG:0, ARG:1, DAMAGESUM, MP_DECREASE_RATE = 100, ARG:3)
#DIM LCOUNT,3	;ループ用
#DIM DAMAGESUM	;実ダメージ

;絶頂の強さ
#DIM EXTASY_INTENSITY
;オーバーキル度合い　これが高いほど強く絶頂したことになる
#DIM OVER_KILL_DEGREE
;絶頂した際のMP減少倍率を指定する
#DIM MP_DECREASE_RATE
;絶頂した際のEPダメージのオーバーキル具合で一つ上を増やす todo:変数名修正
#DIM MP_DECREASE_RATE_BASE



SIF ARG:0 <= 0 || DAMAGESUM == 0
	RETURN




;－－－－－服装補正－－－－－
CALL CLOTH_TYPE_EFFECT_ダメ補正(ARG, ARG:1, TFLAG:63)
IF RESULT > 0
	DAMAGESUM = DAMAGESUM * (100 + RESULT:1) / 100
ENDIF


;－－－－－軽減アクセ確認－－－－－
CALL GET_EQUIP_BONUS(ARG:0, 28 + ARG:1)
IF RESULT
	SELECTCASE ARG:1
		CASE 0
			DAMAGESUM = DAMAGESUM * 67 / 100
		CASE 1
			DAMAGESUM = DAMAGESUM * 67 / 100
		CASE 2
			DAMAGESUM = DAMAGESUM * 67 / 100
		CASE 3
			DAMAGESUM = DAMAGESUM * 50 / 100
	ENDSELECT
ENDIF

;－－－－－素質処理－－－－－
;戦闘中非戦闘中問わず影響
IF ARG:1 == 0
	IF TALENT:(ARG:0):40
		DAMAGESUM = DAMAGESUM * 11 / 10
	ENDIF
	IF TALENT:(ARG:0):41
		DAMAGESUM = DAMAGESUM * 9 / 10
	ENDIF
ENDIF

IF ARG:1 == 2
	;【神気】は感度レベルが低いほどダメージ軽減
	IF TALENT:(ARG:0):168 == 1
		DAMAGESUM = DAMAGESUM * (90 + ABL:(ARG:0):6 + ABL:(ARG:0):7 + ABL:(ARG:0):8 + ABL:(ARG:0):9 + ABL:(ARG:0):15) / 100
	ELSEIF TALENT:(ARG:0):168 == 2
		DAMAGESUM = DAMAGESUM * (93 + ABL:(ARG:0):6 + ABL:(ARG:0):7 + ABL:(ARG:0):8 + ABL:(ARG:0):9 + ABL:(ARG:0):15) / 100
	ENDIF
ENDIF

IF ARG:1 == 3
	;【神気】は感度レベルが低いほどダメージ軽減
	IF TALENT:(ARG:0):168 == 1
		DAMAGESUM = DAMAGESUM * (90 + ABL:(ARG:0):6 + ABL:(ARG:0):7 + ABL:(ARG:0):8 + ABL:(ARG:0):9 + ABL:(ARG:0):15) / 100
	ELSEIF TALENT:(ARG:0):168 == 2
		DAMAGESUM = DAMAGESUM * (93 + ABL:(ARG:0):6 + ABL:(ARG:0):7 + ABL:(ARG:0):8 + ABL:(ARG:0):9 + ABL:(ARG:0):15) / 100
	ENDIF
ENDIF

;－－－－－実処理－－－－－
SELECTCASE ARG:1
	CASE 0
		IF BASE:(ARG:0):(ARG:1) <= 0
			;元々0ならメッセージのみ
			PRINTFORM %CALLNAME:(ARG:0)%は
			SETCOLOR 0x70FFFF
			PRINTFORM {DAMAGESUM}
			RESETCOLOR
			PRINTFORML のダメージを受けた！
		ELSE
			PRINTFORM %CALLNAME:(ARG:0)%は
			SETCOLOR 0x70FFFF
			PRINTFORM {DAMAGESUM}
			RESETCOLOR
			PRINTFORML のダメージを受けた！
			BASE:(ARG:0):(ARG:1) -= DAMAGESUM
			IF BASE:(ARG:0):(ARG:1) <= 0
				CALL PRINT_MESSAGE(ARG:0, 32, 0, CALLNAME:(ARG:0), "")
				BASE:(ARG:0):(ARG:1) = 0
				CALL CHANGE_TP(ARG:0, 16)
				CALL SHOW_TUTORIAL(11)
			ENDIF
		ENDIF
	CASE 1
		IF BASE:(ARG:0):(ARG:1) <= 0
			;元々0ならメッセージのみ
			PRINTFORM %CALLNAME:(ARG:0)%の精神力が
			SETCOLOR 0x70FF70
			PRINTFORM {DAMAGESUM}
			RESETCOLOR
			PRINTFORML 削られた！
		ELSE
			PRINTFORM %CALLNAME:(ARG:0)%の精神力が
			SETCOLOR 0x70FF70
			PRINTFORM {DAMAGESUM}
			RESETCOLOR
			PRINTFORML 削られた！
			BASE:(ARG:0):(ARG:1) -= DAMAGESUM
			IF BASE:(ARG:0):(ARG:1) <= 0
				BASE:(ARG:0):(ARG:1) = 0
				CALL HEART_BREAK(ARG:0)
			ENDIF
		ENDIF
	CASE 2
		;EPは常時処理
		PRINTFORM %CALLNAME:(ARG:0)%は
		SETCOLOR 0xFF70FF
		PRINTFORM {DAMAGESUM}
		RESETCOLOR
		PRINTFORML の快感を得た！
		BASE:(ARG:0):(ARG:1) -= DAMAGESUM
		IF BASE:(ARG:0):(ARG:1) <= 0
			;BASEが下回った量のMAXBASEに対する割合を求める
			;0以上の整数になる
			OVER_KILL_DEGREE = (0 - BASE:(ARG:0):(ARG:1)) * 100 / MAXBASE:(ARG:0):(ARG:1)
			;オーバーキル具合によって絶頂量に補正
			SELECTCASE OVER_KILL_DEGREE
				CASE IS < 50
					EXTASY_INTENSITY = OVER_KILL_DEGREE + 100
					MP_DECREASE_RATE_BASE = OVER_KILL_DEGREE + 100
				CASE IS < 100
					EXTASY_INTENSITY = OVER_KILL_DEGREE * 2 + 150
					MP_DECREASE_RATE_BASE = OVER_KILL_DEGREE + 100
				CASE IS < 200
					EXTASY_INTENSITY = OVER_KILL_DEGREE * 3 + 200
					MP_DECREASE_RATE_BASE = OVER_KILL_DEGREE + 120
				CASE IS < 5000
					EXTASY_INTENSITY = OVER_KILL_DEGREE + MAXBASE:(ARG:0):1 / 8
					MP_DECREASE_RATE_BASE = OVER_KILL_DEGREE + 300
				CASEELSE
					EXTASY_INTENSITY = OVER_KILL_DEGREE * 5 + 300
					MP_DECREASE_RATE_BASE = OVER_KILL_DEGREE + 150
			ENDSELECT
			;消費MP減少倍率もオーバーキル具合によって補正
			SIF MP_DECREASE_RATE == 0
				MP_DECREASE_RATE = 100
			MP_DECREASE_RATE = MP_DECREASE_RATE * MP_DECREASE_RATE_BASE / 100
			CALL PRINT_MESSAGE(ARG:0, 34, TFLAG:63, CALLNAME:(ARG:0), "", 0)
			CALL EXTASY(ARG:0, TFLAG:63, EXTASY_INTENSITY, MP_DECREASE_RATE, ARG:3)
			;戦闘中のEPダメージによる絶頂はEP1までしか回復しない
			;寸止めでも残りEPは1に
			SIF TFLAG:13
				BASE:(ARG:0):(ARG:1) = 1
			CALL SHOW_TUTORIAL(13)
		ENDIF
	CASE 3
		IF BASE:(ARG:0):(ARG:1) <= 0 || ((BASE:(ARG:0):3 * 100 / MAXBASE:(ARG:0):3 <= 40 || BASE:(ARG:0):3 <= DAMAGESUM) && FLAG:529 == 1)
			;CPの場合、元々裸なら何も表示しない 着衣プレイモードでCP40％以下やオーバーキルでも同様
		ELSE
			PRINTFORM %CALLNAME:(ARG:0)%の服が
			SETCOLOR 0xFFFF70
			PRINTFORM {DAMAGESUM}
			RESETCOLOR
			PRINTFORML 破られた！
			;破れる前の服の状態をチェック
			LOCAL:2 = BASE:(ARG:0):3 * 100 / MAXBASE:(ARG:0):3
			IF LOCAL:2 <= 0
				LOCAL:1 = 0
			ELSEIF LOCAL:2 <= 33
				LOCAL:1 = 1
			ELSEIF LOCAL:2 <= 66
				LOCAL:1 = 2
			ELSE
				LOCAL:1 = 3
			ENDIF
			BASE:(ARG:0):(ARG:1) -= DAMAGESUM
			;破れた後の服の状態をチェック
			LOCAL:2 = BASE:(ARG:0):3 * 100 / MAXBASE:(ARG:0):3
			IF LOCAL:2 <= 0 && LOCAL:1 > 0
				CALL PRINT_MESSAGE(ARG:0, 35, 0, CALLNAME:(ARG:0), "")
				BASE:(ARG:0):(ARG:1) = 0
				CALL CHANGE_TP(ARG:0, 17)
				CALL SHOW_TUTORIAL(14)
					;◆触手服フラグ消去
					IF CFLAG:(ARG:0):40 == 1
						CFLAG:(ARG:0):40 = 0
					ENDIF
					;◆◆
					;はいてない消去
					IF CFLAG:(ARG:0):44 >= 1
						CFLAG:(ARG:0):44 = 0
					ENDIF
			ELSEIF LOCAL:2 <= 33 && LOCAL:1 > 1
				CALL PRINT_MESSAGE(ARG:0, 35, 1, CALLNAME:(ARG:0), "")
			ELSEIF LOCAL:2 <= 66 && LOCAL:1 > 2
				CALL PRINT_MESSAGE(ARG:0, 35, 2, CALLNAME:(ARG:0), "")
			ENDIF
		ENDIF
	CASE 4
		CALL ADD_TP(ARG:0, DAMAGESUM)
ENDSELECT



;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;味方のひるみ共通処理
;ARG:0	対象キャラ
@ADD_STUN(ARG:0)

CFLAG:(ARG:0):24 = 1
CFLAG:(ARG:0):50 = 45
CFLAG:(ARG:0):51 = 1
CFLAG:(ARG:0):52 = 0
CFLAG:(ARG:0):54 = 0
CFLAG:(ARG:0):31 = 0
CFLAG:(ARG:0):33 = 0



;味方の拘束共通処理
;ARG:0	対象キャラ
;ARG:1	敵キャラ
;ARG:2	丸呑みフラグ
;ARG:3	二重拘束許可
@ADD_BIND(ARG:0, ARG:1, ARG:2, ARG:3)

IF CFLAG:(ARG:0):10 || CFLAG:(ARG:0):20
	;既に捕まっている場合、何もしない
	RETURN
ENDIF

IF DA:(ARG:1):10 && DA:(ARG:1):20 && DA:(ARG:1):10 != ARG:0 && DA:(ARG:1):20 != ARG:0
	;両方埋まっている場合もう拘束できない
	CALL PRINT_MESSAGE(ARG:0, 58, ARG:1, CALLNAME:(ARG:0), SAVESTR:(ARG:1))
	RETURN
ELSEIF DA:(ARG:1):20 && ARG:3 == 0 && DA:(ARG:1):20 != ARG:0
	;二重拘束禁止の場合、先客が居れば拘束できない
	CALL PRINT_MESSAGE(ARG:0, 58, ARG:1, CALLNAME:(ARG:0), SAVESTR:(ARG:1))
	RETURN
ELSEIF DA:(ARG:1):10 == ARG:0 || DA:(ARG:1):20 == ARG:0
	;既に自分が捕まえている場合、何もしない
	RETURN
ENDIF

IF DA:(ARG:1):10 == 0 && ARG:3 == 1
	;二重拘束許可の場合、捕食枠が空いていれば捕食枠に入る
	;こちらの方が優先順位高
	CFLAG:(ARG:0):10 = ARG:1
	IF ARG:2
		CFLAG:(ARG:0):21 = 1
	ENDIF
	CFLAG:(ARG:0):50 = 45
	CFLAG:(ARG:0):51 = 1
	CFLAG:(ARG:0):52 = 0
	CFLAG:(ARG:0):54 = 0
	CFLAG:(ARG:0):31 = 0
	CFLAG:(ARG:0):33 = 0

	DA:(ARG:1):10 = ARG:0
	IF ARG:0 == FLAG:10
		DA:(ARG:1):71 = ARG:0
	ELSEIF ARG:0 == FLAG:11
		DA:(ARG:1):72 = ARG:0
	ELSE
		DA:(ARG:1):70 = 1
	ENDIF
ELSEIF DA:(ARG:1):20 == 0
	CFLAG:(ARG:0):20 = ARG:1
	IF ARG:2
		CFLAG:(ARG:0):21 = 1
	ENDIF
	CFLAG:(ARG:0):50 = 45
	CFLAG:(ARG:0):51 = 1
	CFLAG:(ARG:0):52 = 0
	CFLAG:(ARG:0):54 = 0
	CFLAG:(ARG:0):31 = 0
	CFLAG:(ARG:0):33 = 0

	DA:(ARG:1):20 = ARG:0
	IF ARG:0 == FLAG:10
		DA:(ARG:1):71 = ARG:0
	ELSEIF ARG:0 == FLAG:11
		DA:(ARG:1):72 = ARG:0
	ELSE
		DA:(ARG:1):70 = 1
	ENDIF
ENDIF


;いちいち汚染度状態をIFでやっていくのがめんどいので作成した汚染度確認用関数
;BATTLEってあるけどぶっちゃけ戦闘時以外も使えます。
@BATTLE_POLUTION
#FUNCTION
LOCAL = FLAG:(50 + FLAG:5)
SELECTCASE LOCAL
	CASE IS < 5
		RETURNF 0
	CASE IS < 20
		RETURNF 1
	CASE IS < 60
		RETURNF 2
	CASE IS < 80
		RETURNF 3
	CASE IS < 100
		RETURNF 4
	CASE IS >= 100
		RETURNF 5
ENDSELECT


;対象の敵が生存エネミーの中で一番HPが少ないかどうか調べる
@CHECK_HP_MIN_LIVE_MEMBER_ENEMY(ENEMY_ID)
#FUNCTION
#DIM LCOUNT
#DIM ENEMY_ID
#DIM MIN_HP
	
	;既に死亡している敵は除外
	SIF DA:ENEMY_ID:1 <= 0
		RETURNF 0
	
	;敵全員のHPを調べて、対象と一致したら1を返す
	MIN_HP = DA:ENEMY_ID:1
	FOR LCOUNT, 1, TFLAG:15 + 1
		SIF DA:(TFLAG:LCOUNT):1 > 0 && DA:(TFLAG:LCOUNT):1 < MIN_HP
			MIN_HP = DA:(TFLAG:LCOUNT):1
	NEXT
	SIF MIN_HP == DA:ENEMY_ID:1
		RETURNF 1
RETURNF 0
