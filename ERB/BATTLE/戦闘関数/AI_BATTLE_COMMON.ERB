; AI戦闘用の雑多な関数

; 行動決定済キャラの攻撃を受けた場合の敵の残りHPを算出
; 攻撃には振れ幅があるので、あくまで想定値
@CHECK_ATTACKED_ENEMY_HP(ENEMY_ID)
#DIM LCOUNT
#DIM ENEMY_ID
#DIM ENEMY_HP
#DIM ACTIVE_CHARA_ID, 3
	
	; 初期化
	ENEMY_HP = DA:ENEMY_ID:1
	
	ACTIVE_CHARA_ID = 1, FLAG:10, FLAG:11
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		; 行動が決定済のキャラのみ処理
		IF ACTIVE_CHARA_ID:LCOUNT && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50
			; 単体攻撃
			IF GROUPMATCH(CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 % 100, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 25, 30, 31, 32, 33, 34)
				IF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == ENEMY_ID
					CALL CHECK_ATTACKED_DAMAGE(ACTIVE_CHARA_ID:LCOUNT, CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50, CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51)
					ENEMY_HP -= RESULT
				ENDIF
			; 全体攻撃
			ELSEIF GROUPMATCH(CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 % 100, 15, 24)
				CALL CHECK_ATTACKED_DAMAGE(ACTIVE_CHARA_ID:LCOUNT, CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50, CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51)
				ENEMY_HP -= RESULT
			ENDIF
		ENDIF
	NEXT
RETURN ENEMY_HP


; 仮に攻撃を行った場合のダメージ想定値を取得
; 攻撃には振れ幅があるので、あくまで想定値
@CHECK_ATTACKED_DAMAGE(CHARA_ID, COMMAND_NO, ENEMY_ID)
#DIM CHARA_ID
#DIM COMMAND_NO
#DIM ENEMY_ID
#DIM DAMAGE
#DIM KEEP_COMMAND_NO
#DIM KEEP_TARGET_ID
	
	; 攻撃以外のコマンドは弾く
	SIF !GROUPMATCH(COMMAND_NO % 100, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34)
		RETURN 0
		
	; コマンドの実行可能判定を行う
	SIF !IS_BATTLE_COMMAND(CHARA_ID, COMMAND_NO)
		RETURN 0
		
	; 既にコマンド確定状態の可能性があるので保持
	KEEP_COMMAND_NO = CFLAG:CHARA_ID:50
	KEEP_TARGET_ID  = CFLAG:CHARA_ID:51
	
	; チェック用コマンドに置き換える
	CFLAG:CHARA_ID:50 = COMMAND_NO
	CFLAG:CHARA_ID:51 = ENEMY_ID
	
	; メッセージ非表示フラグON
	FLAG:20 = 1
	
	; 属性を確定させておく
	; 攻撃戦闘
	IF CFLAG:CHARA_ID:50 < 100
		TFLAG:50 = CFLAG:CHARA_ID:50
		TRYCALLFORM FIX_PT_ACTION_{CFLAG:CHARA_ID:50}(CHARA_ID)
	; 道具戦闘
	ELSE
		TFLAG:67 = CFLAG:CHARA_ID:(6 + (CFLAG:CHARA_ID:50 / 100))
		TFLAG:50 = CFLAG:CHARA_ID:50 % 100
		TRYCALLFORM FIX_PT_ACTION_{(CFLAG:CHARA_ID:50 % 100)}(CHARA_ID, CFLAG:CHARA_ID:50 / 100)
	ENDIF

	CALL CHECK_ATTACK_DAMAGE_0(CHARA_ID, ENEMY_ID)
	DAMAGE = RESULT

	; メッセージ非表示フラグOFF
	FLAG:20 = 0
	
	; 処理終了後は元のコマンドに戻しておく
	CFLAG:CHARA_ID:50 = KEEP_COMMAND_NO
	CFLAG:CHARA_ID:51 = KEEP_TARGET_ID 
	
RETURN DAMAGE


; 仮に攻撃を行った場合の命中率想定値を取得
@CHECK_ATTACKED_HIT_RATE(CHARA_ID, COMMAND_NO, ENEMY_ID)
#DIM CHARA_ID
#DIM COMMAND_NO
#DIM ENEMY_ID
#DIM HIT_RATE
#DIM KEEP_COMMAND_NO
#DIM KEEP_TARGET_ID
	
	; 攻撃以外のコマンドは弾く
	SIF !GROUPMATCH(COMMAND_NO % 100, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34)
		RETURN 0
		
	; 既にコマンド確定状態の可能性があるので保持
	KEEP_COMMAND_NO = CFLAG:CHARA_ID:50
	KEEP_TARGET_ID  = CFLAG:CHARA_ID:51
	
	; チェック用コマンドに置き換える
	CFLAG:CHARA_ID:50 = COMMAND_NO
	CFLAG:CHARA_ID:51 = ENEMY_ID
	
	; メッセージ非表示フラグON
	FLAG:20 = 1
	
	; 実際の命中率を取得 使用スキルによって設定が変わるので分岐
	; 攻撃戦闘
	IF CFLAG:CHARA_ID:50 < 100
		TFLAG:50 = CFLAG:CHARA_ID:50
		TRYCALLFORM FIX_PT_ACTION_{CFLAG:CHARA_ID:50}(CHARA_ID)
		CALL GET_HIT_RATE_PT(CHARA_ID, ENEMY_ID, 3)
	; 道具戦闘
	ELSE
		TFLAG:67 = CFLAG:CHARA_ID:(6 + (CFLAG:CHARA_ID:50 / 100))
		TFLAG:50 = CFLAG:CHARA_ID:50 % 100
		TRYCALLFORM FIX_PT_ACTION_{(CFLAG:CHARA_ID:50 % 100)}(CHARA_ID, CFLAG:CHARA_ID:50 / 100)
		CALL GET_HIT_RATE_PT(CHARA_ID, ENEMY_ID, 4)
	ENDIF
	HIT_RATE = RESULT

	; メッセージ非表示フラグOFF
	FLAG:20 = 0
	
	; 処理終了後は元のコマンドに戻しておく
	CFLAG:CHARA_ID:50 = KEEP_COMMAND_NO
	CFLAG:CHARA_ID:51 = KEEP_TARGET_ID 
	
RETURN HIT_RATE


; 仮に浄化を行った場合の部屋汚染度を取得
@CHECK_CLEANED_POLLUTION()
#DIM POLLUTION

	POLLUTION = FLAG:(50 + FLAG:5)
	
	; 緊急浄化分を計算
	POLLUTION -= (CFLAG:1:50 == 8 ? 20 # 0)
	POLLUTION -= (CFLAG:(FLAG:10):50 == 8 ? 20 # 0)
	POLLUTION -= (CFLAG:(FLAG:11):50 == 8 ? 20 # 0)
	
	; 浄化玉利用分を計算
	POLLUTION -= ((CFLAG:1:50 == 2 && CFLAG:1:54 == 71) ? 50 # 0)
	POLLUTION -= ((CFLAG:(FLAG:10):50 == 2 && CFLAG:(FLAG:10):54 == 71) ? 50 # 0)
	POLLUTION -= ((CFLAG:(FLAG:11):50 == 2 && CFLAG:(FLAG:11):54 == 71) ? 50 # 0)
		
RETURN LIMIT(POLLUTION, 0, 100)


; 仮にHP回復を行った場合の値を取得
@CHECK_RECOVERED_HP(TARGET_ID)
#DIM TARGET_ID
#DIM LCOUNT
#DIM RECOVERED_HP
#DIM ACTIVE_CHARA_ID, 3
	
	RECOVERED_HP = BASE:TARGET_ID:HP
	
	; 誰かが緑茶を使用
	ACTIVE_CHARA_ID:0 = 1, FLAG:10, FLAG:11
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 50
			RECOVERED_HP += (MAXBASE:TARGET_ID:HP / 2)
	NEXT
	
	; 誰かが玉露を使用
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 51
			RECOVERED_HP += MAXBASE:TARGET_ID:HP
	NEXT
	
RETURN LIMIT(RECOVERED_HP, 0, MAXBASE:TARGET_ID:HP)


; 仮にMP回復を行った場合の値を取得
@CHECK_RECOVERED_MP(TARGET_ID)
#DIM TARGET_ID
#DIM LCOUNT
#DIM RECOVERED_MP
#DIM ACTIVE_CHARA_ID, 3
	
	RECOVERED_MP = BASE:TARGET_ID:MP
	
	; 誰かが日本酒を使用
	ACTIVE_CHARA_ID:0 = 1, FLAG:10, FLAG:11
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 52
			RECOVERED_MP += (MAXBASE:TARGET_ID:MP / 4)
	NEXT
	
	; 誰かが神酒を使用
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 53
			RECOVERED_MP += (MAXBASE:TARGET_ID:MP / 2)
	NEXT
	
	; 対象キャラが防御を選択
	SIF CFLAG:TARGET_ID:50 == 1
		RECOVERED_MP += (MAXBASE:TARGET_ID:MP / 200)
	
; MPは上限突破する可能性があるのでMAXBASEでのLIMITは掛けない
RETURN LIMIT(RECOVERED_MP, 0, __INT_MAX__)


; 仮にCP回復を行った場合の値を取得
@CHECK_RECOVERED_CP(TARGET_ID)
#DIM TARGET_ID
#DIM LCOUNT
#DIM RECOVERED_CP
#DIM ACTIVE_CHARA_ID, 3
	
	RECOVERED_CP = BASE:TARGET_ID:CP
	
	; 誰かが着替えセットを使用
	ACTIVE_CHARA_ID:0 = 1, FLAG:10, FLAG:11
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 54
			RECOVERED_CP = MAXBASE:TARGET_ID:CP
	NEXT
	
RETURN LIMIT(RECOVERED_CP, 0, MAXBASE:TARGET_ID:CP)


; 仮にEP回復を行った場合の値を取得
@CHECK_RECOVERED_EP(TARGET_ID)
#DIM TARGET_ID
#DIM LCOUNT
#DIM RECOVERED_EP
#DIM ACTIVE_CHARA_ID, 3
	
	RECOVERED_EP = BASE:TARGET_ID:EP
	
	ACTIVE_CHARA_ID:0 = 1, FLAG:10, FLAG:11
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		; 鎮静剤を使用
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 55
			RECOVERED_EP = MAXBASE:TARGET_ID:EP
	NEXT
	
RETURN LIMIT(RECOVERED_EP, 0, MAXBASE:TARGET_ID:EP)


; 仮にTP回復を行った場合の値を取得
@CHECK_RECOVERED_TP(TARGET_ID)
#DIM TARGET_ID
#DIM LCOUNT
#DIM RECOVERED_TP
#DIM ACTIVE_CHARA_ID, 3
	
	RECOVERED_TP = BASE:TARGET_ID:TP
	
	; 使用アイテムによって上下動するので速度順に処理
	ACTIVE_CHARA_ID:0 = 1, FLAG:10, FLAG:11
	CALL SORT_CHARA_ID_BY_SPEED(ACTIVE_CHARA_ID)
	FOR LCOUNT, 0, GET_MEMBER_SUM()
		; 鎮静剤を使用
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 55
			RECOVERED_TP = 0
		; 興奮剤を使用
		SIF CFLAG:(ACTIVE_CHARA_ID:LCOUNT):50 == 2 && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):51 == TARGET_ID && CFLAG:(ACTIVE_CHARA_ID:LCOUNT):54 == 56
			RECOVERED_TP = MAXBASE:TARGET_ID:TP
	NEXT
	
RETURN LIMIT(RECOVERED_TP, 0, MAXBASE:TARGET_ID:TP)


; AI戦闘コマンド用 性格別データテーブルから必要な値を返す関数
@AI_COMMAND_DATATABLE_TO_RATE(CHARA_ID, DATA_TABLE)
#FUNCTION
#DIM CHARA_ID
#DIM REF DATA_TABLE, 0, 0
#DIM RATE
	
	SELECTCASE CFLAG:CHARA_ID:12
	CASE IS <= -40
		RATE = DATA_TABLE:(CFLAG:CHARA_ID:100):0
	CASE -39 TO -20
		RATE = DATA_TABLE:(CFLAG:CHARA_ID:100):1
	CASE -19 TO 19
		RATE = DATA_TABLE:(CFLAG:CHARA_ID:100):2
	CASE 20 TO 39
		RATE = DATA_TABLE:(CFLAG:CHARA_ID:100):3
	CASEELSE
		RATE = DATA_TABLE:(CFLAG:CHARA_ID:100):4
	ENDSELECT
	
RETURNF RATE

;キャラIDを行動速度でソート
@SORT_CHARA_ID_BY_SPEED(CHARA_ID)
#DIM REF CHARA_ID, 0
#DIM CHARA_SPEED, 3
	
	; AIの行動順を決定、補正値込みの行動速度が早い順に
	CALL GET_CHARA_BATTLE_SPEED(CHARA_ID:0)
	CHARA_SPEED:0 = RESULT
	CALL GET_CHARA_BATTLE_SPEED(CHARA_ID:1)
	CHARA_SPEED:1 = RESULT
	CALL GET_CHARA_BATTLE_SPEED(CHARA_ID:2)
	CHARA_SPEED:2 = RESULT
	IF CHARA_ID:2 && (CHARA_SPEED:2 > CHARA_SPEED:1 || (CHARA_SPEED:2 == CHARA_SPEED:1 && RAND:2))
		SWAP CHARA_ID:2, CHARA_ID:1
		SWAP CHARA_SPEED:2, CHARA_SPEED:1
	ENDIF
	IF CHARA_ID:1 && (CHARA_SPEED:1 > CHARA_SPEED:0 || (CHARA_SPEED:1 == CHARA_SPEED:0 && RAND:2))
		SWAP CHARA_ID:1, CHARA_ID:0
		SWAP CHARA_SPEED:1, CHARA_SPEED:0
	ENDIF
	
RETURN

